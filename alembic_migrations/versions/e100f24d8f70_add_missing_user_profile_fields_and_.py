"""Add missing user profile fields and sync schema

Revision ID: e100f24d8f70
Revises: 
Create Date: 2025-06-21 23:40:45.778598

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e100f24d8f70'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('emergency_contacts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('relationship_type', sa.String(length=50), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('notification_type', sa.Enum('SMS', 'PUSH', 'EMAIL', name='notificationtype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'SENT', 'DELIVERED', 'FAILED', name='notificationstatus'), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('push_token', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('travel_preferences',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('smoking_allowed', sa.Boolean(), nullable=True),
    sa.Column('pets_allowed', sa.Boolean(), nullable=True),
    sa.Column('music_allowed', sa.Boolean(), nullable=True),
    sa.Column('talking_allowed', sa.Boolean(), nullable=True),
    sa.Column('preferred_driver_gender', sa.String(length=10), nullable=True),
    sa.Column('preferred_passenger_gender', sa.String(length=10), nullable=True),
    sa.Column('preferred_comfort_level', sa.String(length=20), nullable=True),
    sa.Column('max_price_per_km', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('user_settings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('sms_notifications', sa.Boolean(), nullable=True),
    sa.Column('push_notifications', sa.Boolean(), nullable=True),
    sa.Column('email_notifications', sa.Boolean(), nullable=True),
    sa.Column('show_phone_to_driver', sa.Boolean(), nullable=True),
    sa.Column('show_profile_picture', sa.Boolean(), nullable=True),
    sa.Column('allow_contact_from_passengers', sa.Boolean(), nullable=True),
    sa.Column('auto_location_detection', sa.Boolean(), nullable=True),
    sa.Column('save_frequent_routes', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('emergency_alerts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('trip_id', sa.UUID(), nullable=True),
    sa.Column('emergency_type', sa.Enum('SOS', 'ACCIDENT', 'BREAKDOWN', 'HARASSMENT', name='emergencytype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('location_lat', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('location_lng', sa.Numeric(precision=11, scale=8), nullable=True),
    sa.Column('location_address', sa.String(), nullable=True),
    sa.Column('is_resolved', sa.Boolean(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['resolved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message_threads',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('trip_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('price_negotiations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('trip_id', sa.UUID(), nullable=False),
    sa.Column('passenger_id', sa.UUID(), nullable=False),
    sa.Column('original_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('proposed_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('final_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('seats_requested', sa.Integer(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'REJECTED', 'EXPIRED', name='pricenegotiationstatus'), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('responded_at', sa.DateTime(), nullable=True),
    sa.Column('response_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['passenger_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('thread_id', sa.UUID(), nullable=False),
    sa.Column('sender_id', sa.UUID(), nullable=False),
    sa.Column('receiver_id', sa.UUID(), nullable=True),
    sa.Column('message_type', sa.Enum('TEXT', 'LOCATION', 'SYSTEM', name='messagetype'), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('message_metadata', sa.JSON(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['thread_id'], ['message_threads.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ratings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('trip_id', sa.UUID(), nullable=False),
    sa.Column('booking_id', sa.UUID(), nullable=True),
    sa.Column('rater_id', sa.UUID(), nullable=False),
    sa.Column('rated_user_id', sa.UUID(), nullable=False),
    sa.Column('rating_type', sa.Enum('DRIVER_TO_PASSENGER', 'PASSENGER_TO_DRIVER', name='ratingtype'), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('review', sa.Text(), nullable=True),
    sa.Column('punctuality', sa.Integer(), nullable=True),
    sa.Column('cleanliness', sa.Integer(), nullable=True),
    sa.Column('communication', sa.Integer(), nullable=True),
    sa.Column('driving_quality', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['rated_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['rater_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('thread_participants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('thread_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_read_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['thread_id'], ['message_threads.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('bookings', sa.Column('pickup_location', sa.String(), nullable=True))
    op.add_column('bookings', sa.Column('dropoff_location', sa.String(), nullable=True))
    op.add_column('bookings', sa.Column('special_requests', sa.Text(), nullable=True))
    op.add_column('bookings', sa.Column('payment_method', sa.String(length=20), nullable=True))
    op.add_column('cars', sa.Column('year', sa.Integer(), nullable=True))
    op.add_column('cars', sa.Column('car_image_url', sa.String(), nullable=True))
    op.add_column('cars', sa.Column('features', sa.JSON(), nullable=True))
    op.add_column('cars', sa.Column('comfort_level', sa.String(length=20), nullable=True))
    op.add_column('trips', sa.Column('intermediate_stops', sa.JSON(), nullable=True))
    op.add_column('trips', sa.Column('trip_preferences', sa.JSON(), nullable=True))
    op.add_column('trips', sa.Column('is_recurring', sa.Boolean(), nullable=True))
    op.add_column('trips', sa.Column('recurring_pattern', sa.JSON(), nullable=True))
    op.add_column('trips', sa.Column('is_instant_booking', sa.Boolean(), nullable=True))
    op.add_column('trips', sa.Column('max_detour_km', sa.Integer(), nullable=True))
    op.add_column('trips', sa.Column('price_negotiable', sa.Boolean(), nullable=True))
    op.add_column('trips', sa.Column('estimated_distance_km', sa.Integer(), nullable=True))
    op.add_column('trips', sa.Column('estimated_duration_minutes', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('profile_image_url', sa.String(), nullable=True))
    op.add_column('users', sa.Column('date_of_birth', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('gender', sa.String(length=10), nullable=True))
    op.add_column('users', sa.Column('spoken_languages', sa.JSON(), nullable=True))
    op.add_column('users', sa.Column('bio', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('is_phone_verified', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('is_email_verified', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('email', sa.String(), nullable=True))
    op.add_column('users', sa.Column('preferred_language', sa.String(length=5), nullable=True))
    op.add_column('users', sa.Column('currency_preference', sa.String(length=3), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'currency_preference')
    op.drop_column('users', 'preferred_language')
    op.drop_column('users', 'email')
    op.drop_column('users', 'is_email_verified')
    op.drop_column('users', 'is_phone_verified')
    op.drop_column('users', 'bio')
    op.drop_column('users', 'spoken_languages')
    op.drop_column('users', 'gender')
    op.drop_column('users', 'date_of_birth')
    op.drop_column('users', 'profile_image_url')
    op.drop_column('trips', 'estimated_duration_minutes')
    op.drop_column('trips', 'estimated_distance_km')
    op.drop_column('trips', 'price_negotiable')
    op.drop_column('trips', 'max_detour_km')
    op.drop_column('trips', 'is_instant_booking')
    op.drop_column('trips', 'recurring_pattern')
    op.drop_column('trips', 'is_recurring')
    op.drop_column('trips', 'trip_preferences')
    op.drop_column('trips', 'intermediate_stops')
    op.drop_column('cars', 'comfort_level')
    op.drop_column('cars', 'features')
    op.drop_column('cars', 'car_image_url')
    op.drop_column('cars', 'year')
    op.drop_column('bookings', 'payment_method')
    op.drop_column('bookings', 'special_requests')
    op.drop_column('bookings', 'dropoff_location')
    op.drop_column('bookings', 'pickup_location')
    op.drop_table('thread_participants')
    op.drop_table('ratings')
    op.drop_table('messages')
    op.drop_table('price_negotiations')
    op.drop_table('message_threads')
    op.drop_table('emergency_alerts')
    op.drop_table('user_settings')
    op.drop_table('travel_preferences')
    op.drop_table('notifications')
    op.drop_table('emergency_contacts')
    # ### end Alembic commands ###
