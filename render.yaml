# File: render.yaml (Revised PostgreSQL section)

services:
  # PostgreSQL Database Service
  - type: pserv # This tells Render it's a PostgreSQL service
    name: autoport-db
    region: frankfurt # Choose your preferred region
    plan: free      # Use the free plan for PostgreSQL

  # FastAPI Web Service (Your API Backend)
  - type: web
    name: autoport-api
    runtime: docker
    region: frankfurt # Match the database region for low latency
    plan: free
    dockerfilePath: ./Dockerfile
    healthCheckPath: /health
    envVars:
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: DATABASE_URL
        fromDatabase:
          name: autoport-db # Refers to the PostgreSQL service defined above
          property: connectionString # Render injects the correct internal connection string
      - key: JWT_SECRET_KEY
        sync: false # CRITICAL: Set this as a secret in the Render dashboard
      - key: JWT_ALGORITHM
        value: "HS256"
      - key: JWT_ACCESS_TOKEN_EXPIRE_MINUTES
        value: "30"
      - key: APP_NAME
        value: "AutoPort API (Render)"
      - key: APP_VERSION
        value: "0.1.0-render"
      - key: ENVIRONMENT
        value: "production" # Or "staging"
      # Example for CORS origins - set this in Render Dashboard for your actual frontend URL
      # - key: BACKEND_CORS_ORIGINS 
      #   value: "https://your-frontend-domain.com" # Or "http://localhost:xxxx" for local frontend dev against deployed backend

    # Commands to run during the build phase
    buildCommand: |
      pip install -r requirements.txt # If not already fully handled in Dockerfile
      alembic upgrade head
    
    # Command to start your application
    # Render injects a PORT environment variable that your web service must listen on.
    startCommand: uvicorn main:app --host 0.0.0.0 --port $PORT --workers 1
    
    autoDeploy: true
    # branch: main # Uncomment and set if you want to deploy from a specific branch